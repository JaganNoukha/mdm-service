name: Node.js CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Build the Application
        run: npm run build

      - name: Archive Build Artifacts and node_modules
        run: |
          zip -r build.zip dist/
          zip -r node_modules.zip node_modules/
          ls -lh node_modules.zip
        continue-on-error: false

      - name: Deploy to EC2 via SSH
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "Saving SSH key..."
          echo "$SSH_KEY" > private_key.pem
          chmod 600 private_key.pem

          echo "Creating app directory on EC2..."
          ssh -o StrictHostKeyChecking=no -i private_key.pem $SSH_USER@$SSH_HOST "mkdir -p /home/$SSH_USER/mdm-service"

          echo "Copying build files to EC2..."
          scp -o StrictHostKeyChecking=no -i private_key.pem build.zip node_modules.zip $SSH_USER@$SSH_HOST:/home/$SSH_USER/mdm-service/

          echo "Unzipping and starting app on EC2..."
          ssh -o StrictHostKeyChecking=no -i private_key.pem $SSH_USER@$SSH_HOST << 'EOF'
            cd /home/ubuntu/mdm-service
            unzip -o build.zip
            unzip -o node_modules.zip
            rm -f build.zip node_modules.zip

            if pm2 list | grep -q "mdm-service"; then
              echo "Restarting existing PM2 process..."
              pm2 restart mdm-service
            else
              echo "Starting new PM2 process..."
              pm2 start dist/src/main.js --name mdm-service
            fi

            pm2 save
          EOF

          echo "Cleaning up SSH key..."
          rm -f private_key.pem
